type CandidateCreated @entity(immutable: true) {
  id: Bytes!
  electionId: BigInt! # uint256
  candidateId: BigInt! # uint256
  name: String! # string
  description: String! # string
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ElectionCreated @entity(immutable: true) {
  id: Bytes!
  internal_id: BigInt! # uint256
  creator: Bytes! # address
  name: String! # string
  description: String! # string
  image: String! # string
  deadline: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ElectionEnded @entity(immutable: true) {
  id: Bytes!
  electionId: BigInt! # uint256
  totalVotes: BigInt! # uint256
  winner: String! # string
  winnerVoteCount: BigInt! # uint256
  results: [Bytes!]! # tuple[]
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type OwnershipTransferred @entity(immutable: true) {
  id: Bytes!
  previousOwner: Bytes! # address
  newOwner: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Paused @entity(immutable: true) {
  id: Bytes!
  account: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Unpaused @entity(immutable: true) {
  id: Bytes!
  account: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type VoteSubmitted @entity(immutable: true) {
  id: Bytes!
  electionId: BigInt! # uint256
  voter_address: Bytes! # address
  candidateId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
